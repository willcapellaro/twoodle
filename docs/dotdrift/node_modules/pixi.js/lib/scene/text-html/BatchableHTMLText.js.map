{"version":3,"file":"BatchableHTMLText.js","sources":["../../../src/scene/text-html/BatchableHTMLText.ts"],"sourcesContent":["import { type Texture } from '../../rendering/renderers/shared/texture/Texture';\nimport { BatchableSprite } from '../sprite/BatchableSprite';\n\nimport type { Renderer } from '../../rendering/renderers/types';\nimport type { HTMLText } from './HTMLText';\n\n/**\n * The BatchableHTMLText class extends the BatchableSprite class and is used to handle HTML text rendering.\n * It includes a promise for the texture as generating the HTML texture takes some time.\n * @internal\n */\nexport class BatchableHTMLText extends BatchableSprite\n{\n    private readonly _renderer: Renderer;\n    public texturePromise: Promise<Texture>;\n    public generatingTexture = false;\n    public currentKey: string = '--';\n\n    /**\n     * Creates an instance of BatchableHTMLText.\n     * @param renderer - The renderer instance to be used.\n     */\n    constructor(renderer: Renderer)\n    {\n        super();\n\n        // Next step is to make canvasTextSystem a GLOBAL object.\n        // so this is ok for now..\n        this._renderer = renderer;\n\n        renderer.runners.resolutionChange.add(this);\n    }\n\n    /** Handles resolution changes for the HTML text. If the text has auto resolution enabled, it triggers a view update. */\n    public resolutionChange()\n    {\n        const text = this.renderable as HTMLText;\n\n        if (text._autoResolution)\n        {\n            text.onViewUpdate();\n        }\n    }\n\n    /** Destroys the BatchableHTMLText instance. Returns the texture promise to the renderer and cleans up references. */\n    public destroy()\n    {\n        const { htmlText } = this._renderer;\n\n        htmlText.getReferenceCount(this.currentKey) === null\n            ? htmlText.returnTexturePromise(this.texturePromise)\n            : htmlText.decreaseReferenceCount(this.currentKey);\n        this._renderer.runners.resolutionChange.remove(this);\n        this.texturePromise = null;\n        (this._renderer as null) = null;\n    }\n}\n"],"names":["BatchableSprite"],"mappings":";;;;;AAWO,MAAM,0BAA0BA,+BACvC,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUI,YAAY,QACZ,EAAA;AACI,IAAM,KAAA,EAAA,CAAA;AATV,IAAA,IAAA,CAAO,iBAAoB,GAAA,KAAA,CAAA;AAC3B,IAAA,IAAA,CAAO,UAAqB,GAAA,IAAA,CAAA;AAYxB,IAAA,IAAA,CAAK,SAAY,GAAA,QAAA,CAAA;AAEjB,IAAS,QAAA,CAAA,OAAA,CAAQ,gBAAiB,CAAA,GAAA,CAAI,IAAI,CAAA,CAAA;AAAA,GAC9C;AAAA;AAAA,EAGO,gBACP,GAAA;AACI,IAAA,MAAM,OAAO,IAAK,CAAA,UAAA,CAAA;AAElB,IAAA,IAAI,KAAK,eACT,EAAA;AACI,MAAA,IAAA,CAAK,YAAa,EAAA,CAAA;AAAA,KACtB;AAAA,GACJ;AAAA;AAAA,EAGO,OACP,GAAA;AACI,IAAM,MAAA,EAAE,QAAS,EAAA,GAAI,IAAK,CAAA,SAAA,CAAA;AAE1B,IAAA,QAAA,CAAS,iBAAkB,CAAA,IAAA,CAAK,UAAU,CAAA,KAAM,IAC1C,GAAA,QAAA,CAAS,oBAAqB,CAAA,IAAA,CAAK,cAAc,CAAA,GACjD,QAAS,CAAA,sBAAA,CAAuB,KAAK,UAAU,CAAA,CAAA;AACrD,IAAA,IAAA,CAAK,SAAU,CAAA,OAAA,CAAQ,gBAAiB,CAAA,MAAA,CAAO,IAAI,CAAA,CAAA;AACnD,IAAA,IAAA,CAAK,cAAiB,GAAA,IAAA,CAAA;AACtB,IAAC,KAAK,SAAqB,GAAA,IAAA,CAAA;AAAA,GAC/B;AACJ;;;;"}