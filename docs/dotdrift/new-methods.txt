// Add these methods to GridRacer class - append to end of original-game.ts

  createAccordionSection(title: string, isExpanded: boolean): HTMLDivElement {
    const section = document.createElement('div');
    section.style.borderBottom = '1px solid #374151';
    
    const header = document.createElement('div');
    header.style.cssText = `
      display: flex; justify-content: space-between; align-items: center;
      padding: 12px 16px; cursor: pointer; user-select: none;
      background: #374151;
    `;
    
    const titleSpan = document.createElement('span');
    titleSpan.textContent = title;
    titleSpan.style.cssText = 'font-weight: bold; color: #fbbf24; font-size: 14px;';
    
    const toggleBtn = document.createElement('button');
    toggleBtn.textContent = isExpanded ? '▼' : '▶';
    toggleBtn.style.cssText = `
      background: none; border: none; color: #9ca3af;
      cursor: pointer; font-size: 12px; padding: 4px;
    `;
    
    const content = document.createElement('div');
    content.className = 'section-content';
    content.style.cssText = `padding: 16px; display: ${isExpanded ? 'block' : 'none'};`;
    
    header.appendChild(titleSpan);
    header.appendChild(toggleBtn);
    section.appendChild(header);
    section.appendChild(content);
    
    header.addEventListener('click', () => {
      const isVisible = content.style.display !== 'none';
      content.style.display = isVisible ? 'none' : 'block';
      toggleBtn.textContent = isVisible ? '▶' : '▼';
    });
    
    return section;
  }
  
  populateBrailleSection() {
    const content = this.brailleSection.querySelector('.section-content') as HTMLDivElement;
    content.innerHTML = `
      <div style="text-align: center;">
        <img src="public/grasscorner.png" style="width: 32px; height: 32px; image-rendering: pixelated; margin-bottom: 15px;">
        <div style="display: grid; grid-template-columns: 1fr auto 1fr; gap: 8px; font-size: 11px; margin-bottom: 15px;">
          <div></div><div style="color: #10b981;">⠝ N ↑</div><div></div>
          <div style="color: #10b981;">⠺ W ←</div><div style="font-size: 16px; color: #6b7280;">✤</div><div style="color: #10b981;">⠑ E →</div>
          <div></div><div style="color: #10b981;">⠎ S ↓</div><div></div>
        </div>
        <button style="background: #3b82f6; color: white; border: none; padding: 6px 12px; border-radius: 4px; width: 100%; font-size: 11px;">More</button>
      </div>
    `;
  }
  
  populateDebugSection() {
    const content = this.debugSection.querySelector('.section-content') as HTMLDivElement;
    content.appendChild(this.createDebugControl('Square Size', 'squareSize', this.squareSize, 20, 100, 5, 'Size of grid squares'));
    content.appendChild(this.createDebugControl('Grid Width', 'gridHNumber', this.gridHNumber, 10, 50, 2, 'Grid width')); 
    content.appendChild(this.createDebugToggle('Audio Enabled', 'audioEnabled', this.audioEnabled, 'Master audio'));
  }
  
  populateRaceLogSection() {
    this.updateRaceLogDisplay();
  }